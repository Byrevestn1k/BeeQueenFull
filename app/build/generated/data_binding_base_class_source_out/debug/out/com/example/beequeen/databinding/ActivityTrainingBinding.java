// Generated by view binder compiler. Do not edit!
package com.example.beequeen.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.beequeen.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTrainingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCapture;

  @NonNull
  public final Button btnExportZip;

  @NonNull
  public final Button btnHowToTrain;

  @NonNull
  public final Button btnImportModel;

  @NonNull
  public final Button btnImportZip;

  @NonNull
  public final Button btnPick;

  @NonNull
  public final RecyclerView rvImages;

  @NonNull
  public final TextView tvInfo;

  private ActivityTrainingBinding(@NonNull LinearLayout rootView, @NonNull Button btnCapture,
      @NonNull Button btnExportZip, @NonNull Button btnHowToTrain, @NonNull Button btnImportModel,
      @NonNull Button btnImportZip, @NonNull Button btnPick, @NonNull RecyclerView rvImages,
      @NonNull TextView tvInfo) {
    this.rootView = rootView;
    this.btnCapture = btnCapture;
    this.btnExportZip = btnExportZip;
    this.btnHowToTrain = btnHowToTrain;
    this.btnImportModel = btnImportModel;
    this.btnImportZip = btnImportZip;
    this.btnPick = btnPick;
    this.rvImages = rvImages;
    this.tvInfo = tvInfo;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTrainingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTrainingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_training, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTrainingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCapture;
      Button btnCapture = ViewBindings.findChildViewById(rootView, id);
      if (btnCapture == null) {
        break missingId;
      }

      id = R.id.btnExportZip;
      Button btnExportZip = ViewBindings.findChildViewById(rootView, id);
      if (btnExportZip == null) {
        break missingId;
      }

      id = R.id.btnHowToTrain;
      Button btnHowToTrain = ViewBindings.findChildViewById(rootView, id);
      if (btnHowToTrain == null) {
        break missingId;
      }

      id = R.id.btnImportModel;
      Button btnImportModel = ViewBindings.findChildViewById(rootView, id);
      if (btnImportModel == null) {
        break missingId;
      }

      id = R.id.btnImportZip;
      Button btnImportZip = ViewBindings.findChildViewById(rootView, id);
      if (btnImportZip == null) {
        break missingId;
      }

      id = R.id.btnPick;
      Button btnPick = ViewBindings.findChildViewById(rootView, id);
      if (btnPick == null) {
        break missingId;
      }

      id = R.id.rvImages;
      RecyclerView rvImages = ViewBindings.findChildViewById(rootView, id);
      if (rvImages == null) {
        break missingId;
      }

      id = R.id.tvInfo;
      TextView tvInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvInfo == null) {
        break missingId;
      }

      return new ActivityTrainingBinding((LinearLayout) rootView, btnCapture, btnExportZip,
          btnHowToTrain, btnImportModel, btnImportZip, btnPick, rvImages, tvInfo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
